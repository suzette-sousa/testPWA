{"version":3,"sources":["styles/Global.module.scss","logo.svg","components/Randomquotes/Randomquotes.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js","components/Randomquotes/Randomquotes.module.scss"],"names":["module","exports","axios","require","default","Quote","props","className","Gstyle","this","content","author","React","Component","Randomquotes","state","bg","changeQuote","bind","get","then","response","randomQuote","data","quotes","Math","floor","random","length","randomBgPastel","setState","quote","style","backgroundColor","target","rel","href","aria-hidden","focusable","data-icon","role","viewBox","d","onClick","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d1c954fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"d-flex\":\"Global_d-flex__1orQ9\",\"flex-col\":\"Global_flex-col__2tMxX\",\"justify-content-center\":\"Global_justify-content-center__1p7dS\",\"d-flex-col-content-center\":\"Global_d-flex-col-content-center__cCiGT Global_d-flex__1orQ9 Global_flex-col__2tMxX Global_justify-content-center__1p7dS\",\"visu-hidden\":\"Global_visu-hidden__24Lzc\",\"txt-center\":\"Global_txt-center__2ls1Y\",\"btn\":\"Global_btn__2Pccc\",\"mt-auto\":\"Global_mt-auto__1Gxnc\"};","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport style from './Randomquotes.module.scss';\nimport Gstyle from '../../styles/Global.module.scss';\nconst axios = require('axios').default;\n\n\nclass Quote extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className={`${Gstyle['mt-auto']}`}>\n        <h1>{this.props.content}</h1>\n        <em>{this.props.author}</em>\n      </div>\n    );\n  }\n}\n\nclass Randomquotes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\\\"Citation par défaut\\\"\",\n      author: \"Auteur par défaut\",\n      bg: \"\"\n    }\n    this.changeQuote = this.changeQuote.bind(this);\n  }\n  changeQuote() {\naxios.get(`https://gist.githubusercontent.com/nasrulhazim/54b659e43b1035215cd0ba1d4577ee80/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json`)\n      .then(response => {\n        const randomQuote = response.data.quotes[Math.floor(Math.random() * Math.floor(response.data.quotes.length))];\n        const randomHue = Math.floor(Math.random() * 360);\n        const randomBgPastel = 'hsl(' + randomHue + ', 100%, 90%)';\n        this.setState({\n          content: `\"${randomQuote.quote}\"`,\n          author: randomQuote.author,\n          bg: randomBgPastel\n        })\n      })\n  }\n  render() {\n    return (\n      <div className={`${style['Randomquote']} ${Gstyle['d-flex-col-content-center']} ${Gstyle['txt-center']}`} style={{backgroundColor: this.state.bg}}>\n        <a className={`${style['tweeter-ctr']}`} target=\"_blank\" rel=\"noreferrer\" href={`https://twitter.com/intent/tweet?text=${this.state.content}%20-%20${this.state.author}`}>\n          <span className={`${Gstyle['visu-hidden']}`}>Tweeter cette citation</span>\n          <svg className={`${style['tweeter-ico']}`} aria-hidden=\"true\" focusable=\"false\" data-icon=\"twitter\" role=\"img\" viewBox=\"0 0 24 24\"><g><path d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"></path></g></svg>\n        </a>\n        <Quote content={this.state.content} author={this.state.author} />\n        <div className={`${Gstyle['mt-auto']}`} >\n          <button onClick={this.changeQuote} className={`${Gstyle['btn']}`} >Changer de citation</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Randomquotes;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Randomquotes from './components/Randomquotes/Randomquotes.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Randomquotes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"d-flex\":\"Randomquotes_d-flex__dafPm\",\"flex-col\":\"Randomquotes_flex-col__2vfHT\",\"justify-content-center\":\"Randomquotes_justify-content-center__1RQu5\",\"d-flex-col-content-center\":\"Randomquotes_d-flex-col-content-center__17zgS Randomquotes_d-flex__dafPm Randomquotes_flex-col__2vfHT Randomquotes_justify-content-center__1RQu5\",\"visu-hidden\":\"Randomquotes_visu-hidden__3NeAq\",\"txt-center\":\"Randomquotes_txt-center__O5DlQ\",\"btn\":\"Randomquotes_btn__16ACW\",\"mt-auto\":\"Randomquotes_mt-auto__-s8q7\",\"Randomquote\":\"Randomquotes_Randomquote__2DuxJ\",\"tweeter-ctr\":\"Randomquotes_tweeter-ctr__1mDw3\",\"tweeter-ico\":\"Randomquotes_tweeter-ico__34HiI\"};"],"sourceRoot":""}